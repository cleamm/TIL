-- SELECT FIRST_NAME FROM EMPLOYEES;

-- select first_name from EMPLOYEES where DEPARTMENT_ID = 10;

-- select FIRST_NAME, SALARY, SALARY*12 from EMPLOYEES where SALARY >= 15000;
-- select FIRST_NAME, SALARY, SALARY*12 from EMPLOYEES where SALARY >= 15000;

-- 아래는 원래는 되는 코드임. vscode라서 안됨;
-- select e.FIRST_NAME, e.HIRE_DATE FROM EMPLOYEES e WHERE e.HIRE_DATE >= '2007/01/01';
-- 아래 코드가 위 코드의 대체용
-- select e.FIRST_NAME, e.HIRE_DATE FROM EMPLOYEES e WHERE e.HIRE_DATE >= TO_DATE('2007-01-01', 'YYYY-MM-DD');

-- select FIRST_NAME, SALARY*12 "연봉" FROM EMPLOYEES WHERE FIRST_NAME='Lex';

-- SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY >= 14000 AND SALARY <= 17000;

-- 아래는 강의용 코드
-- SELECT FIRST_NAME, HIRE_DATE "입사일" FROM EMPLOYEES 
-- WHERE HIRE_DATE >= '2004/01/01' AND HIRE_DATE <= '2005/12/31';
-- 아래코드는 일반 sql코드
-- SELECT FIRST_NAME, TO_CHAR(HIRE_DATE, 'YYYY/MM/DD') "입사일" FROM EMPLOYEES 
-- WHERE HIRE_DATE >= TO_DATE('2004/01/01', 'YYYY/MM/DD') AND HIRE_DATE <= TO_DATE('2005/12/31', 'YYYY/MM/DD');

-- SELECT FIRST_NAME || LAST_NAME "FULLNAME", SALARY FROM EMPLOYEES WHERE FIRST_NAME IN ('Neena' ,'Lex' ,'John');
-- SELECT FIRST_NAME || ' ' || LAST_NAME "FULLNAME", SALARY FROM EMPLOYEES WHERE SALARY IN (2100, 3100,4100,5100);

-- SELECT FIRST_NAME || ' ' || LAST_NAME, SALARY FROM EMPLOYEES WHERE FIRST_NAME LIKE 'L%';
-- SELECT FIRST_NAME || ' ' || LAST_NAME "FULLNAME", SALARY FROM EMPLOYEES WHERE FIRST_NAME LIKE '%am%' OR LAST_NAME LIKE '%am%';

-- 4글자 이름중 끝 두번째 스펠링이 a인 사람 조회
-- SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE FIRST_NAME LIKE '__a_';

-- SELECT FIRST_NAME, SALARY*12 "연봉", COMMISSION_PCT 
-- FROM EMPLOYEES
-- WHERE COMMISSION_PCT IS NOT null;

-- SELECT FIRST_NAME FROM EMPLOYEES WHERE MANAGER_ID IS NULL AND COMMISSION_PCT IS NULL;

-- 급여순 중에서 입사일 순
-- SELECT FIRST_NAME, SALARY, HIRE_DATE FROM EMPLOYEES ORDER BY 2 DESC, 3;

-- SELECT DEPARTMENT_ID, SALARY, FIRST_NAME FROM EMPLOYEES ORDER BY DEPARTMENT_ID;
-- SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY >= 5000 ORDER BY SALARY DESC;

-- INITCAP : 첫글자만 대문자
-- SELECT EMAIL, INITCAP(EMAIL), DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=100;

-- 대소문자
-- SELECT FIRST_NAME, LOWER(FIRST_NAME), UPPER(FIRST_NAME) FROM EMPLOYEES WHERE DEPARTMENT_ID = 100;

-- SUBSTR(컬럼, 시작, 글자수) 특정길이 문자열 구하기
-- SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 2, 3) FROM EMPLOYEES WHERE DEPARTMENT_ID=100;
-- SELECT SUBSTR('APPLE', 2,2) FROM dual;

-- LPAD(컬럼, 자리수, 채울문자) + RPAD(오른쪽부터) 주어진 텍스트도 정해진 길이를 넘기면 출력이 끊김(무조건 뒷글자부터 잘림)
-- SELECT FIRST_NAME, LPAD(FIRST_NAME, 10, '*'), RPAD(FIRST_NAME, 10, '*') FROM EMPLOYEES;

-- SELECT FIRST_NAME, REPLACE(FIRST_NAME, 'e', 'EEEEEEEE') FROM EMPLOYEES;

-- SELECT FIRST_NAME, TO_CHAR(HIRE_DATE, 'YYYY/MM/DD'), MONTHS_BETWEEN(sysdate, HIRE_DATE) 
-- FROM EMPLOYEES 
-- WHERE DEPARTMENT_ID=110;

-- SELECT FIRST_NAME, TO_CHAR(HIRE_DATE, 'YYYY/MM/DD'), MONTHS_BETWEEN(HIRE_DATE, sysdate) 
-- FROM EMPLOYEES 
-- WHERE DEPARTMENT_ID=110;


-- SELECT @count,TO_DATE('2000/12/22', 'YYYY/MM/DD') FROM dual 
-- WHERE MOD(A,4) = 0 AND MOD(A, 100) != 0 OR MOD(A, 400) = 0;

-- select sysdate, TO_CHAR(sysdate, 'YYYY"년"MM"월"DD"일" HH24:MI:SS') "현재시각" from dual;

-- NULL값을 치환할 값
-- SELECT COMMISSION_PCT, NVL(COMMISSION_PCT, 0) FROM EMPLOYEES;
-- NULL값과 아닌 값을 치환할 값
-- SELECT COMMISSION_PCT, NVL2(COMMISSION_PCT, 100, 0) FROM EMPLOYEES;

-- 문제3. 담당 매니저가 배정되어 있으나 
-- 커미션비율이 없고, 월급이 3000초과인 직원의 이름, 매니저아이디, 커미션 비율, 월급 조회
-- SELECT FIRST_NAME, MANAGER_ID, COMMISSION_PCT, SALARY 
-- FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL AND COMMISSION_PCT IS NULL AND SALARY > 3000;

-- 담당 매니저가 배정되어있으나 커미션비율이 없고, 
-- 월급이 3000초과인 직원의 
-- 이름, 매니저아이디, 커미션 비율, 월급 을 출력하세요.(45명)
-- SELECT e.FIRST_NAME ,
--        e.MANAGER_ID,
--        e.COMMISSION_PCT,
--        e.SALARY
-- FROM EMPLOYEES e 
-- WHERE e.MANAGER_ID IS NOT NULL 
-- AND   e.COMMISSION_PCT IS NULL
-- AND   e.SALARY > 3000;

-- 문제4. 최고월급(MAX_SALARY)이 10000이상인 업무의 이름(JOB_TITLE)과 최고월급을 최고월급의 내림차순으로 정렬하여 조회
-- SELECT JOB_TITLE, MAX_SALARY FROM JOBS 
-- WHERE MAX_SALARY >= 10000 ORDER BY MAX_SALARY DESC;

-- 최고월급(max_salary)이 10000 이상인 업무의 
-- 이름(job_title)과 최고월급(max_salary)을 
-- 최고월급의(max_salary) 내림차순(DESC)로 정렬하여 출력하세요. 
-- (JOBS – 10건)   
-- SELECT *
-- FROM JOBS j ;
-- SELECT j.JOB_TITLE ,
--        j.MAX_SALARY
-- FROM JOBS j 
-- WHERE j.MAX_SALARY >= 10000
-- ORDER BY 2 desc;

-- 문제1. 직원중에 최고임금(SALARY)과 최저임금을 "최고입금, 최저임금" 프로젝션 타이틀로 조회
-- 두 임금 차이는 얼마인가?
-- "최고임금 - 최저임금" 이란 타이틀로 함께 조회
-- SELECT MAX(SALARY), MIN(SALARY), MAX(SALARY)-MIN(SALARY) "최고임금 - 최저임금" FROM EMPLOYEES;

-- SELECT COUNT(e.SALARY), COUNT(e.COMMISSION_PCT) FROM EMPLOYEES e;
-- SELECT COUNT(*) FROM EMPLOYEES;
-- SELECT SUM(SALARY) FROM EMPLOYEES;
-- SELECT * FROM EMPLOYEES ;

-- SELECT COUNT(*), MAX(SALARY), MIN(SALARY) FROM EMPLOYEES;

-- 각 업무별 최고급여
-- SELECT DEPARTMENT_ID, MAX(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID;

-- 각 업무별 평균급여
-- SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID;


-- 문제2 마지막으로 신입사원이 들어온 날은 언제입니까? 다음형식으로 출력해주세요
-- ex) 2014년 07월 10일
-- SELECT MAX(TO_CHAR(HIRE_DATE, 'YYYY"년" MM"월" DD"일"')) "입사일" 
-- FROM EMPLOYEES 
-- ORDER BY HIRE_DATE DESC;

-- 문제3 부서별로 평균임금, 최고임금, 최저임금을 부서(department_id)와 함께 출력하고 정렬 순서는 부서번호의 내림차순
-- select DEPARTMENT_ID, avg(salary), max(salary), min(salary) from EMPLOYEES 
-- GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID desc;



